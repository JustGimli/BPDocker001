# Generated by Django 4.2.2 on 2023-08-06 11:21

import apps.users.managers
import apps.users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[apps.users.models.validate_unique_email], verbose_name='email')),
                ('phone', models.CharField(max_length=255, verbose_name='phone')),
                ('first_name', models.CharField(blank=True, max_length=56, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=56, verbose_name='last name')),
                ('surname', models.CharField(blank=True, max_length=56, verbose_name='surname')),
                ('password', models.CharField(max_length=512, verbose_name='password')),
                ('date_joined', models.DateField(auto_now_add=True, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='is super user')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('oferta', models.BooleanField(default=True, verbose_name='accepted')),
                ('status', models.BooleanField(default=False, verbose_name='verification_status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'indexes': [models.Index(fields=['id'], name='users_user_id_1cecd0_idx'), models.Index(fields=['email'], name='users_user_email_6f2530_idx')],
            },
            managers=[
                ('objects', apps.users.managers.UserManger()),
            ],
        ),
    ]
